



/*
Для ограничения шаблона в принимаемых можно использовать следующую кострукцию:
    "возращемый тип, имя, типы данных, аргументы функции" where "тип данных": "разрешенные типы"{
        "Тело функции"
    }

В качестве разрешенных тип можно использовать следующее:
    1) Определенное название класса
    2) Определенное название интерфейса
    3) class - универсальный параметр должен представлять класс 
        (при использовании не работает 1)
    4) struct - универсальный параметр должен представлять структуру 
        (при использовании не работает 1)
    5) new() - универсальный параметр должен представлять тип, который имеет
        общедоступный (public) конструктор без параметров
*/


/* Создание шаблонной функции*/
void my_fun<type1, type2>(type1 number_1, type2 number_2)
where type1: struct 
where type2: class{
    Console.WriteLine($"number_1 = {number_1}\t number_2 = {number_2}");
}



// Вызов шаблонной функции
// my_fun(12, 87.4f); 
/* Вызов не возможен так как 2 параметр не является обьектом класса 
    (это значение структуры)*/
my_fun(12, "some text"); 
my_fun(87.4f, "some text"); 
//my_fun("some inform", "some text"); 
/* Вызов не возможен так как 1 параметр не является значением структуры 
    (это обьект класса)*/


