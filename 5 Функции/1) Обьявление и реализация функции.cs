



/*
Функция - это участок кода, который может быть вызван из других частей программы. 
Функция - именованная область кода выполняющая какое либо действие 
    и может быть вызвана из любой части программы

Если мы используем класс программу, то функции должны быть статическими

Иногда аргументы функций называются формальными(имя аргументов), 
    а параметры при вызове функции - фактичиские(значение для аргументов)

Синтаксис функции:
// "Коментарий к функции"
"модификторы" "Тип данных которая возвращает функция" "имя функции"("аргуметы функции"){
    "Тело/блок функции"
}

При измении массивов в функции, масив меняется везде
При изменении переменной с конкретным значением (не массива), переменная изменется только в функции 
    (при условии что эта переменная - аргумент функции)
    Если в функции будет напрямую (не аргумент функции) менятся глобальная переменная то переменная изменится везде
Все то что мы не хотим менять в функции должно иметь приписку const 
*/

Console.WriteLine("Вызов функции перед определением");
my_fun(); // Вызов функции my_fun

// Пример:
// Данная функция выводит 100 в консоль и ничего не вовращает
void my_fun(){
    Console.WriteLine("100");
}
// Сокращенная запись функции: void my_fun() => Console.WriteLine("100");

Console.WriteLine("Вызов функции после определения");
my_fun(); // Вызов функции my_fun


/**
Данная функция демострирует значения массива
 * @brief 
 * 
 * @param numbers массив целых значений
 * @return int - Сумма элементов масива
 */
int sum(int[] numbers){
    // int[] numbers - [] указвают что передаваемый параметр - массив.
    int sum = 0;

    for (int i = 0; i < numbers.Length; i += 1){
        sum += numbers[i];
    } 
    // return - данная штука возвращает значение из функции
    return sum;
}

int[] my_arrey = {1, 2, 3, 4};
int res = sum(my_arrey); // Вывов функции  sum с необходимыми аргуметами
    
Console.WriteLine($"Suma collection = {res}");