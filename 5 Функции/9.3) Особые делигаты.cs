



/* Особые делигаты */

/* Делигат Action
Делигат Action выполняет действие которое заложили в данный делигат
В качестве возращаемого типа имеет тип void
В качестве аргументов имеет 16 аргументов, с типом который указан 
    в шаблоне и с модификатором in
*/
void sum(int a, int b){
    Console.WriteLine($"{a} + {b} = {a + b}");
}

// Ссылаем делигат Action на функцию sum
Action<int, int> temp = sum; 
temp(3, 9); 


/* Делигат Predicate
Делегат Predicate<T> принимает один параметр и возвращает значение типа bool
Как правило, используется для сравнения, сопоставления некоторого объекта T 
    определенному условию. 
В качестве выходного результата возвращается значение 
    true, если условие соблюдено
    false, если не соблюдено
*/
bool is_positive(int number){return number > 0;}

// Ссылаем делигат Predicate на функцию is_positive
Predicate<int> temp2 = is_positive; 

Console.WriteLine($"Число {-7} позитивно: {temp2(-7)}"); 


/* Делигат Func
Func возвращает результат действия и может принимать параметры. 
В качестве аргументов имеет 16 аргументов, с типом который указан 
    в шаблоне и с модификатором in
Последним типом указан тип данных который должна вернуть функция
*/

double get_sum(int a, float b, float c){
    return a + b + c;
}

// Ссылаем делигат Func на функцию get_sum
Func<int, float, float, double> temp3 = get_sum; 
Console.WriteLine($"{7} + {5.7f} + {3.9} =  {temp3(7, 5.7f, 3.9f)}"); 