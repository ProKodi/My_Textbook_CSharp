



/*
Массивы - совокупность переменных позволяющая хранить несколько однотипных значений
Каждая переменная составляющая массив является элементом этого массива
Индекс - порядковый номер элемента масива
Массив не может хранить переменные разных типов

Количество элементов массива <= размер массива


Способы задания массивов:
С значени по умолчанию:
    тип_данных[] имя_массива = new тип_данных["размер массива"]; // все значения в массиве буду по умолчанию
С заранее определенными значениями:
    тип_данных[] имя_массива = new тип_данных["размер массива"] {"элементы массива"};
    тип_данных[] имя_массива = new тип_данных[] {"элементы массива"};
    тип_данных[] имя_массива = new[] {"элементы массива"};
    тип_данных[] имя_массива = {"элементы массива"};
    тип_данных[] имя_массива = ["элементы массива"];

Данные способы ничем друг от друга не отличаются 
    (речь идет про массивы с заранее заданными значениями)
*/



// Обьявляем целочисленный массив (без инициализации)
int[] numbers = {1, 2, 3, 4};
// int[] numbers = {} // это пустой массив

/* 
Массивы индексируемые, а значит с помощью индекса можно получить значение из массива

Конструкция:
    "название массива"["индекс который мы ищем"]

Если индекс будет больше размерность массива - 1, то будет ошибка
*/

// Выводим эллемент массива
Console.WriteLine($"Значение элемента под индексом 2 в массиве numbers = {numbers[2]}"); 

/*

С помощью индексации, можно менять содержимое массива
Конструкция:
    "название массива"["индекс элемента который заменяем"] = "знаение на которое меняем"

*/
// Порядок заполнения массива может быть любой
numbers[0] = 10;
numbers[1] = 20;
numbers[2] = 30;

// Так же можно указывать индекс с конца. Для этого необходимо указать ^ перед значением индекса
numbers[^1] = 40;


// Взаимодействовать со значеними из массива можно только по существующим индексам (от 0  до количество_эллементов_массива - 1)

// У массива можно узать размер с момощью получения поля Length
Console.WriteLine($"Длина массива = {numbers.Length}");

// Вывод массива через циклы
// Через for
Console.WriteLine("Вывод массива через for"); 
for (int i = 0; i < numbers.Length; i += 1){
    Console.Write($"numbers[{i}] = {numbers[i]}\t"); 
}
Console.WriteLine(); 

Console.WriteLine("Вывод массива через foreach"); 
foreach (int i in numbers){
    Console.Write($"{i}\t"); 
}
Console.WriteLine(); 


/* 
Многомерный массив представляет из себя массив который содержит другие массивы
Количество массивов в массиве называют рангом. Ранг многмерных массивов >= 2
Размерность у массивов одного ранга одинакововая

Способы задания многомерного массива:
С значени по умолчанию:
    тип_данных[,] имя_массива = new тип_данных["размер массива через ,"]; // все значения в массиве буду по умолчанию
С заранее определенными значениями:
    тип_данных[,] имя_массива = new тип_данных["размер массива через ,"] {"элементы массива"};
    тип_данных[,] имя_массива = new тип_данных[,] {"элементы массива"};
    тип_данных[,] имя_массива = new[,] {"элементы массива"};
    тип_данных[,] имя_массива = {"элементы массива"};
    тип_данных[,] имя_массива = ["элементы массива"];

*/
int[,] my_super_arr = new int[2, 3] {
    {1, 2, 3}, {4, 5, 6}
};

Console.WriteLine($"Размер внешнего массива = {my_super_arr.GetUpperBound(0) + 1}");
Console.WriteLine($"Размер внутреннего массива = {my_super_arr.GetUpperBound(1) + 1}");
Console.WriteLine($"Количество элементов в массиве = {my_super_arr.Length}");

Console.WriteLine("Вывод многомерного массива:");
for (int i = 0; i <= my_super_arr.GetUpperBound(0); i += 1){
    for (int ii = 0; ii <= my_super_arr.GetUpperBound(1); ii += 1){
        Console.Write($"{my_super_arr[i, ii]}\t"); 
    }
    Console.WriteLine(); 
}

/* 
Массив массивов  представляет из себя массив который содержит другие массивы
Размерость внутренних массивов может отличатся


Способы задания многомерного массива:
С значени по умолчанию:
    тип_данных[][] имя_массива = new тип_данных["размер массива"][]; // все значения в массиве буду по умолчанию
С заранее определенными значениями:
    тип_данных[,] имя_массива = new тип_данных["размер массива"][] {"элементы массива"};
    тип_данных[,] имя_массива = new тип_данных[] {"элементы массива"};
    тип_данных[,] имя_массива = new[,] {"элементы массива"};
    тип_данных[,] имя_массива = {"элементы массива"};
    тип_данных[,] имя_массива = ["элементы массива"];

*/

int[][] super_arr = new int[2][]; // Создаем массив массивов с внешним размером = 2

super_arr[0] = new int[]{10, 20, 30}; // Создаем внутрений массив с размером = 3
super_arr[1] = new int[]{40, 50, 60, 70}; // Создаем внутрений массив с размером = 4

Console.WriteLine($"Длина массива = {super_arr.Length}");


Console.WriteLine("Вывод массива массивов:");
for (int i = 0; i < super_arr.Length; i += 1){
    for (int ii = 0; ii < (super_arr[i]).Length; ii += 1){
        Console.Write($"{super_arr[i][ii]}\t"); 
    }
    Console.WriteLine(); 
}
