



class Program(){
    static void Main(){
        /* Анонимные типы позволяют создать объект с некоторым набором свойств 
            без определения класса. 

        Анонимный тип определяется с помощью ключевого слова var и инициализатора
            объектов. Данный тип определяется во время компиляции

        Если в программе используются несколько объектов анонимных типов с 
            одинаковым набором свойств, то для них компилятор создаст 
            одно определение анонимного типа

        У анонимного типа можно определять поля, только данные поля буду 
            доступны только для чтения. Определить значение для полей можно 
            только в инициализаторе. 
            При попытке изменить поле анонимного объекта будет ошибка
        */
        // Создаем анонимный тип данных
        var user = new {Name = "Tom", Age = 34};
        // user - это объект анонимного типа
        // Обращение к полю Name
        Console.WriteLine($"user.Name = {user.Name}");
        // Обращение к полю Age
        Console.WriteLine($"user.Age = {user.Age}");
        // user.Age = 95; // Приведет к ошибке


        // Создание массива с анонимными типами
        var array_people = new []{
            new {Name = "Tom"},
            new {Name = "Oleg"},
            new {Name = "Paul"}
        }; 
        // Обход массива анонимных типов
        foreach (var temp in array_people){
            Console.WriteLine($"temp: Name = {temp.Name}");
        }

    }
}


